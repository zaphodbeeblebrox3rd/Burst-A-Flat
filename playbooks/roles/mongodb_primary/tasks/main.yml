---
- name: Add MongoDB GPG key
  ansible.builtin.apt_key:
    url: https://www.mongodb.org/static/pgp/server-6.0.asc
    state: present

- name: Install MongoDB
  ansible.builtin.apt_repository:
    repo: "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse"
    state: present
    update_cache: yes

- name: Install MongoDB packages
  ansible.builtin.apt:
    name:
      - mongodb-org
      - mongodb-org-server
      - mongodb-org-mongos
      - mongodb-org-tools
    state: present
    lock_timeout: 300
  retries: 3
  delay: 90

- name: Create MongoDB configuration
  ansible.builtin.template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf
    owner: mongodb
    group: mongodb
    mode: '0644'
  notify: restart mongod

- name: Ensure MongoDB data directory exists
  ansible.builtin.file:
    path: /var/lib/mongodb
    state: directory
    owner: mongodb
    group: mongodb
    mode: '0755'

- name: Ensure MongoDB log directory exists
  ansible.builtin.file:
    path: /var/log/mongodb
    state: directory
    owner: mongodb
    group: mongodb
    mode: '0755'

- name: Create systemd override directory
  ansible.builtin.file:
    path: /etc/systemd/system/mongod.service.d
    state: directory
    mode: '0755'

- name: Create systemd override configuration
  ansible.builtin.template:
    src: mongod-override.conf.j2
    dest: /etc/systemd/system/mongod.service.d/override.conf
    mode: '0644'
  notify: restart mongod

- name: Start and enable MongoDB
  ansible.builtin.systemd:
    name: mongod
    state: started
    enabled: yes
    daemon_reload: yes

- name: Ensure MongoDB is running
  ansible.builtin.systemd:
    name: mongod
    state: started
  retries: 3
  delay: 10

- name: Wait for MongoDB to start
  ansible.builtin.wait_for:
    port: 27017
    delay: 10

- name: Check if replica set is already initialized
  ansible.builtin.shell: |
    mongosh --eval "rs.status()" --quiet
  register: rs_status
  failed_when: false

- name: Initialize MongoDB replica set
  ansible.builtin.shell: |
    mongosh --eval "rs.initiate({_id: 'burst-a-flat', members: [{_id: 0, host: '{{ inventory_hostname }}:27017'}]})"
  args:
    creates: /tmp/mongodb_initialized
  register: mongodb_init
  failed_when: mongodb_init.rc != 0 and "already initialized" not in mongodb_init.stderr
  when: rs_status.rc != 0

- name: Debug replica set status
  ansible.builtin.debug:
    var: rs_status.stdout

- name: Debug replica set initialization
  ansible.builtin.debug:
    var: mongodb_init.stdout

- name: Wait for replica set to be ready
  ansible.builtin.wait_for:
    port: 27017
    delay: 5
    timeout: 30

- name: Test network connectivity to replica node
  ansible.builtin.shell: |
    ping -c 3 {{ hostvars[groups['mongodb_replica'][0]]['ansible_host'] }}
  register: ping_replica
  failed_when: ping_replica.rc != 0

- name: Test hostname resolution
  ansible.builtin.shell: |
    nslookup {{ hostvars[groups['mongodb_replica'][0]]['inventory_hostname'] }}
  register: dns_test
  failed_when: dns_test.rc != 0

- name: Check current replica set state
  ansible.builtin.shell: |
    mongosh --eval "rs.status()" --quiet
  register: current_rs_status
  failed_when: false

- name: Debug current replica set state
  ansible.builtin.debug:
    var: current_rs_status.stdout

- name: Force this node to become PRIMARY
  ansible.builtin.shell: |
    mongosh --eval "rs.reconfig({_id: 'burst-a-flat', members: [{_id: 0, host: '{{ inventory_hostname }}:27017', priority: 2}, {_id: 1, host: '{{ hostvars[groups['mongodb_replica'][0]]['inventory_hostname'] }}:27017', priority: 1}]}, {force: true})"
  register: reconfig_result
  failed_when: false
  when: current_rs_status.stdout is defined and "stateStr" in current_rs_status.stdout and "SECONDARY" in current_rs_status.stdout

- name: Wait for reconfiguration to complete
  ansible.builtin.pause:
    seconds: 10
  when: reconfig_result is defined

- name: Wait for MongoDB to be in PRIMARY state
  ansible.builtin.shell: |
    mongosh --eval "rs.status().myState" --quiet
  register: primary_state
  until: primary_state.stdout.strip() == "1"
  retries: 10
  delay: 10

- name: Mark MongoDB as initialized
  ansible.builtin.file:
    path: /tmp/mongodb_initialized
    state: touch
