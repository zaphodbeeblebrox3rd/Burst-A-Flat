---
- name: Install Munge
  ansible.builtin.apt:
    name:
      - munge
      - libmunge-dev
    state: present
    lock_timeout: 300
  retries: 3
  delay: 90

- name: Create munge key directory
  ansible.builtin.file:
    path: /etc/munge
    state: directory
    owner: munge
    group: munge
    mode: '0700'

- name: Check if munge key vault file exists and is encrypted
  ansible.builtin.shell: |
    if [ -f "{{ playbook_dir }}/../passwords/munge.key" ]; then
      head -1 "{{ playbook_dir }}/../passwords/munge.key" | grep -q "ANSIBLE_VAULT" && echo "encrypted" || echo "unencrypted"
    else
      echo "missing"
    fi
  register: munge_key_status
  delegate_to: localhost
  become: no
  when: inventory_hostname == groups['slurm_controllers'][0]

- name: Create passwords directory
  ansible.builtin.file:
    path: "{{ playbook_dir }}/../passwords"
    state: directory
    mode: '0700'
  delegate_to: localhost
  become: no
  when: 
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Create vault password file if missing
  ansible.builtin.shell: |
    if [ ! -f "{{ playbook_dir }}/../.vault_pass" ]; then
      head /dev/urandom | tr -dc A-Za-z0-9_ | head -c 45 > "{{ playbook_dir }}/../.vault_pass"
      chmod 600 "{{ playbook_dir }}/../.vault_pass"
      echo "Created vault password file: {{ playbook_dir }}/../.vault_pass"
    fi
  delegate_to: localhost
  become: no
  when: inventory_hostname == groups['slurm_controllers'][0]

- name: Generate new munge key (controller only)
  ansible.builtin.shell: /usr/sbin/mungekey -c
  args:
    creates: /etc/munge/munge.key
  become: yes
  when: 
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Set munge key permissions (controller only)
  ansible.builtin.file:
    path: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0400'
  when: inventory_hostname == groups['slurm_controllers'][0]

- name: Download and encrypt munge key to vault
  ansible.builtin.fetch:
    src: /etc/munge/munge.key
    dest: "{{ playbook_dir }}/../passwords/munge.key"
    flat: yes
  become: yes
  when: 
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Encrypt munge key with ansible-vault
  ansible.builtin.shell: |
    ansible-vault encrypt "{{ playbook_dir }}/../passwords/munge.key" --vault-password-file "{{ playbook_dir }}/../.vault_pass" || \
    ansible-vault encrypt "{{ playbook_dir }}/../passwords/munge.key"
  delegate_to: localhost
  become: no
  when: 
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Deploy munge key from vault (controller only)
  ansible.builtin.shell: |
    ansible-vault decrypt "{{ playbook_dir }}/../passwords/munge.key" --vault-password-file "{{ playbook_dir }}/../.vault_pass" --output /tmp/munge.key
  delegate_to: localhost
  become: no
  when: 
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout == "encrypted"

- name: Copy decrypted munge key to controller
  ansible.builtin.copy:
    src: /tmp/munge.key
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0400'
  become: yes
  when: 
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout == "encrypted"

- name: Copy munge key from vault to all nodes
  ansible.builtin.shell: |
    ansible-vault decrypt "{{ playbook_dir }}/../passwords/munge.key" --vault-password-file "{{ playbook_dir }}/../.vault_pass" --output /tmp/munge.key
  delegate_to: localhost
  become: no
  when: 
    - inventory_hostname != groups['slurm_controllers'][0]
    - munge_key_status.stdout == "encrypted"

- name: Copy decrypted munge key to all nodes
  ansible.builtin.copy:
    src: /tmp/munge.key
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0400'
  become: yes
  when: 
    - inventory_hostname != groups['slurm_controllers'][0]
    - munge_key_status.stdout == "encrypted"

- name: Copy munge key from controller to all nodes (fallback)
  ansible.builtin.copy:
    src: /etc/munge/munge.key
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0400'
    remote_src: yes
  when: 
    - inventory_hostname != groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"
  delegate_to: "{{ groups['slurm_controllers'][0] }}"

- name: Start and enable munge service
  ansible.builtin.systemd:
    name: munge
    state: started
    enabled: yes
