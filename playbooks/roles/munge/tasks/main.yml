---
- name: Install Munge
  ansible.builtin.apt:
    name:
      - munge
      - libmunge-dev
    state: present
    lock_timeout: 300
  retries: 3
  delay: 90

- name: Create munge key directory
  ansible.builtin.file:
    path: /etc/munge
    state: directory
    owner: munge
    group: munge
    mode: '0700'

- name: Check if munge key vault file exists and is encrypted
  ansible.builtin.shell: |
    if [ -f "{{ playbook_dir }}/../passwords/munge.key" ]; then
      head -1 "{{ playbook_dir }}/../passwords/munge.key" | grep -q "ANSIBLE_VAULT" && echo "encrypted" || echo "unencrypted"
    else
      echo "missing"
    fi
  register: munge_key_status
  delegate_to: localhost
  become: no

- name: Create passwords directory
  ansible.builtin.file:
    path: "{{ playbook_dir }}/../passwords"
    state: directory
    mode: '0700'
  delegate_to: localhost
  become: no
  when:
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Create vault password file if missing
  ansible.builtin.shell: |
    if [ ! -f "{{ playbook_dir }}/../.vault_pass" ]; then
      head /dev/urandom | tr -dc A-Za-z0-9_ | head -c 45 > "{{ playbook_dir }}/../.vault_pass"
      chmod 600 "{{ playbook_dir }}/../.vault_pass"
      echo "Created vault password file: {{ playbook_dir }}/../.vault_pass"
    fi
  delegate_to: localhost
  become: no
  when: inventory_hostname == groups['slurm_controllers'][0]

- name: Generate new munge key (controller only)
  ansible.builtin.shell: /usr/sbin/mungekey -c
  args:
    creates: /etc/munge/munge.key
  become: yes
  when:
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Set munge key permissions (controller only)
  ansible.builtin.file:
    path: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0600'
  when: inventory_hostname == groups['slurm_controllers'][0]

- name: Copy unencrypted munge key to temporary location for encryption
  ansible.builtin.fetch:
    src: /etc/munge/munge.key
    dest: /tmp/munge_unencrypted.key
    flat: yes
  become: yes
  when:
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Create MD5 hash of unencrypted munge key for verification
  ansible.builtin.shell: |
    md5sum /tmp/munge_unencrypted.key | cut -d' ' -f1 > "{{ playbook_dir }}/../passwords/munge.key.md5"
  delegate_to: localhost
  become: no
  when:
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Encrypt munge key with ansible-vault
  ansible.builtin.shell: |
    ansible-vault encrypt /tmp/munge_unencrypted.key --vault-password-file "{{ playbook_dir }}/../.vault_pass" --output "{{ playbook_dir }}/../passwords/munge.key"
  delegate_to: localhost
  become: no
  when:
    - inventory_hostname == groups['slurm_controllers'][0]
    - munge_key_status.stdout != "encrypted"

- name: Deploy munge key from vault to all nodes
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../passwords/munge.key"
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0600'
  become: yes
  when: munge_key_status.stdout == "encrypted"

- name: Display the md5 hash of each node's munge key
  ansible.builtin.shell: |
    md5sum /etc/munge/munge.key
  become: yes 
  register: munge_key_verification

- name: Display munge key verification results
  ansible.builtin.debug:
    msg: |
      Munge Key Verification Results: {{ inventory_hostname }}: '{{ munge_key_verification['stdout'] }}'

- name: Create munge configuration file
  ansible.builtin.copy:
    content: |
      # Munge configuration
      # Allow root authentication for system services
      allow_root = true
    dest: /etc/munge/munge.conf
    owner: munge
    group: munge
    mode: '0600'
  become: yes

- name: Create systemd override directory for munge
  ansible.builtin.file:
    path: /etc/systemd/system/munge.service.d
    state: directory
    mode: '0755'

- name: Create systemd override for munge
  ansible.builtin.copy:
    src: munge-override.conf
    dest: /etc/systemd/system/munge.service.d/override.conf
    mode: '0644'

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Start and enable munge service
  ansible.builtin.systemd:
    name: munge
    state: started
    enabled: yes

- name: Clean up temporary munge key files on localhost
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/munge_unencrypted.key
    - /tmp/fresh_munge.key
    - /tmp/fresh_munge2.key
    - /tmp/test_munge.key
    - /tmp/munge_decrypted.key
  delegate_to: localhost
  become: no
